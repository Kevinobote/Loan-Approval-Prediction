{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6144787,"sourceType":"datasetVersion","datasetId":3523739}],"dockerImageVersionId":30698,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"source":"<a href=\"https://www.kaggle.com/code/bonsoularani/loan-approval-analysis?scriptVersionId=174260710\" target=\"_blank\"><img align=\"left\" alt=\"Kaggle\" title=\"Open in Kaggle\" src=\"https://kaggle.com/static/images/open-in-kaggle.svg\"></a>","metadata":{},"cell_type":"markdown"},{"cell_type":"markdown","source":"# The Analysis Covers:\n  ## 1.Loan Applicants Segementation:\n  \n    a)Income\n    b)Number of Dependents\n    c)Education\n    d)Type of Employment\n  ## 2.Applicants Loan Approval\n    a)Rates of loan approval according to:\n      -Level of education\n      -Employment status\n      -Number of Dependents\n    b)Loan Approval by CIBIL Scores\n    \n  ## 3.Correlation Analysis:Test for significance\n    a)Income and Assets\n    b)Asset value influence on loan amount\n    c)Asset value influence on loan approvals\n    d)Correlation between Income and Loan Amount\n    e)Correlation between CIBIL Rating and Loan Status\n    f)Correlation between loan status and self-employment\n    \n    ","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-27T08:04:32.127235Z","iopub.execute_input":"2024-04-27T08:04:32.127672Z","iopub.status.idle":"2024-04-27T08:04:33.231662Z","shell.execute_reply.started":"2024-04-27T08:04:32.127634Z","shell.execute_reply":"2024-04-27T08:04:33.230349Z"}}},{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:31:25.10514Z","iopub.execute_input":"2024-04-27T09:31:25.105604Z","iopub.status.idle":"2024-04-27T09:31:25.122775Z","shell.execute_reply.started":"2024-04-27T09:31:25.105569Z","shell.execute_reply":"2024-04-27T09:31:25.121613Z"},"jupyter":{"source_hidden":true},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Reading the data using Pandas","metadata":{}},{"cell_type":"code","source":"#reading data\ndf = pd.read_csv('/kaggle/input/loan-approval-prediction-dataset/loan_approval_dataset.csv')\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.233542Z","iopub.execute_input":"2024-04-27T08:04:33.233996Z","iopub.status.idle":"2024-04-27T08:04:33.287376Z","shell.execute_reply.started":"2024-04-27T08:04:33.233967Z","shell.execute_reply":"2024-04-27T08:04:33.286431Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#checking the shape of the dataframe\n\ndf.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.288835Z","iopub.execute_input":"2024-04-27T08:04:33.289381Z","iopub.status.idle":"2024-04-27T08:04:33.314544Z","shell.execute_reply.started":"2024-04-27T08:04:33.28935Z","shell.execute_reply":"2024-04-27T08:04:33.313416Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#checking null values\n\ndf.isnull().sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.316863Z","iopub.execute_input":"2024-04-27T08:04:33.31715Z","iopub.status.idle":"2024-04-27T08:04:33.325698Z","shell.execute_reply.started":"2024-04-27T08:04:33.317125Z","shell.execute_reply":"2024-04-27T08:04:33.324462Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#describe function\n\ndf.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.327157Z","iopub.execute_input":"2024-04-27T08:04:33.327539Z","iopub.status.idle":"2024-04-27T08:04:33.377845Z","shell.execute_reply.started":"2024-04-27T08:04:33.32751Z","shell.execute_reply":"2024-04-27T08:04:33.37673Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Data Cleaning","metadata":{}},{"cell_type":"code","source":"#checking duplicates\ndf.duplicated(keep=False).sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:41:41.958102Z","iopub.execute_input":"2024-04-27T09:41:41.958625Z","iopub.status.idle":"2024-04-27T09:41:41.974832Z","shell.execute_reply.started":"2024-04-27T09:41:41.958587Z","shell.execute_reply":"2024-04-27T09:41:41.973338Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df[' residential_assets_value'] = df[' residential_assets_value'].abs()\n\n(df[' residential_assets_value'] < 0).sum()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.395185Z","iopub.execute_input":"2024-04-27T08:04:33.395525Z","iopub.status.idle":"2024-04-27T08:04:33.403033Z","shell.execute_reply.started":"2024-04-27T08:04:33.395498Z","shell.execute_reply":"2024-04-27T08:04:33.40222Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Removing white spaces in column names and all values","metadata":{}},{"cell_type":"code","source":"df.columns = df.columns.str.strip()\n\ndf = df.applymap(lambda x: x.strip() if isinstance(x,str) else x)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.404348Z","iopub.execute_input":"2024-04-27T08:04:33.405284Z","iopub.status.idle":"2024-04-27T08:04:33.444374Z","shell.execute_reply.started":"2024-04-27T08:04:33.405253Z","shell.execute_reply":"2024-04-27T08:04:33.443586Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.info()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.445516Z","iopub.execute_input":"2024-04-27T08:04:33.446264Z","iopub.status.idle":"2024-04-27T08:04:33.458772Z","shell.execute_reply.started":"2024-04-27T08:04:33.446234Z","shell.execute_reply":"2024-04-27T08:04:33.45742Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"df.describe()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.462834Z","iopub.execute_input":"2024-04-27T08:04:33.46344Z","iopub.status.idle":"2024-04-27T08:04:33.500835Z","shell.execute_reply.started":"2024-04-27T08:04:33.463377Z","shell.execute_reply":"2024-04-27T08:04:33.500011Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Adding Columns in the DataFrame","metadata":{}},{"cell_type":"code","source":"#adding of the cibil rating column\n\n\ndef cibil_rating(value):\n    if 300 <= value <= 549:\n        return 'Poor'\n    if 550 <= value <= 649:\n        return 'Average'\n    if 650 <= value <= 749:\n        return 'Good'\n    if 750 <= value <= 900:\n        return 'Excellent'\n    else:\n        return'Error'\n    \ndf['CB_Rating'] = df['cibil_score'].apply(cibil_rating)\n\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.502069Z","iopub.execute_input":"2024-04-27T08:04:33.502552Z","iopub.status.idle":"2024-04-27T08:04:33.5216Z","shell.execute_reply.started":"2024-04-27T08:04:33.502526Z","shell.execute_reply":"2024-04-27T08:04:33.520474Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Adding income level column","metadata":{}},{"cell_type":"code","source":"def income_levels(income):\n    if 100000  <= income <= 1000000:\n        return 'Low'\n    if 1000001 <= income <= 4000000:\n        return 'Lower Middle'\n    if 4000001 <= income <= 7500000:\n        return 'Upper Middle'\n    if 7500001 <= income <= 10000000:\n        return 'High'\n    else:\n        return 'Error'\n    \n    \ndf['Income levels'] = df['income_annum'].apply(income_levels)\n\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.523162Z","iopub.execute_input":"2024-04-27T08:04:33.524177Z","iopub.status.idle":"2024-04-27T08:04:33.546513Z","shell.execute_reply.started":"2024-04-27T08:04:33.524144Z","shell.execute_reply":"2024-04-27T08:04:33.545146Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Adding Loan Column ","metadata":{}},{"cell_type":"code","source":"def loan_rating(amount):\n    if 100000 <= amount <= 10000000:\n        return 'Bronze'\n    if 10000001 <= amount <= 20000000:\n        return 'Silver'\n    if 20000001 <= amount <= 30000000:\n        return 'Gold'\n    if 30000001 <= amount <= 40000000:\n        return 'Platinum'\n    else:\n        return 'Error'\n    \n    \ndf['Loan Rating'] = df['loan_amount'].apply(loan_rating)\n    \ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.548348Z","iopub.execute_input":"2024-04-27T08:04:33.54902Z","iopub.status.idle":"2024-04-27T08:04:33.57398Z","shell.execute_reply.started":"2024-04-27T08:04:33.548976Z","shell.execute_reply":"2024-04-27T08:04:33.572832Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Loan Term Range","metadata":{}},{"cell_type":"code","source":"def loan_term_range (term):\n    if 0 <= term <= 7:\n        return 'Short Term'\n    if 8 <= term <= 14:\n        return 'Intermediate'\n    if 15 <= term <= 20 :\n        return 'Long Term'\n    else:\n        return 'error'\n    \ndf['Loan Range'] = df['loan_term'].apply(loan_term_range)\n\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.575829Z","iopub.execute_input":"2024-04-27T08:04:33.576574Z","iopub.status.idle":"2024-04-27T08:04:33.598453Z","shell.execute_reply.started":"2024-04-27T08:04:33.576537Z","shell.execute_reply":"2024-04-27T08:04:33.597244Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Number of Dependents\n\ndef number_dependents (number):\n    if 0 <= number <= 1:\n        return 'Low'\n    if 2 <= number <= 3:\n        return 'Moderate'\n    if 4 <= number <= 5:\n        return 'High'\n    else:\n        return 'Error'\n    \ndf['Number of Dependents'] = df['no_of_dependents'].apply(number_dependents)\n\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.600296Z","iopub.execute_input":"2024-04-27T08:04:33.601086Z","iopub.status.idle":"2024-04-27T08:04:33.625995Z","shell.execute_reply.started":"2024-04-27T08:04:33.601047Z","shell.execute_reply":"2024-04-27T08:04:33.624793Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Exploratory Data Analysis","metadata":{}},{"cell_type":"markdown","source":"### Customer Segmentation","metadata":{}},{"cell_type":"code","source":"#Grouping customers according to income levels\n\nincome = df['Income levels'].value_counts().reset_index()\n\nIncome = income.rename(columns={'count':'Number of Applicants'})\n\nIncome","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.628087Z","iopub.execute_input":"2024-04-27T08:04:33.629356Z","iopub.status.idle":"2024-04-27T08:04:33.645753Z","shell.execute_reply.started":"2024-04-27T08:04:33.629306Z","shell.execute_reply":"2024-04-27T08:04:33.644915Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#plotting a pie chart\n\nplt.pie(Income['Number of Applicants'], labels=Income['Income levels'], autopct='%1.1f%%')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.647366Z","iopub.execute_input":"2024-04-27T08:04:33.64804Z","iopub.status.idle":"2024-04-27T08:04:33.822878Z","shell.execute_reply.started":"2024-04-27T08:04:33.648009Z","shell.execute_reply":"2024-04-27T08:04:33.821656Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"plt.bar(Income['Income levels'],Income['Number of Applicants'])\n\nplt.suptitle('Income Levels vs Number of Applicants')\nplt.xlabel('Income Levels')\nplt.ylabel('Number of Applicants')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:33.824838Z","iopub.execute_input":"2024-04-27T08:04:33.825595Z","iopub.status.idle":"2024-04-27T08:04:34.06557Z","shell.execute_reply.started":"2024-04-27T08:04:33.825548Z","shell.execute_reply":"2024-04-27T08:04:34.064441Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Loan Rating","metadata":{}},{"cell_type":"code","source":"loan_rating = df['Loan Rating'].value_counts().reset_index()\nloan_rating = loan_rating.rename(columns={'count':'Number of Applicants'})\n\nloan_rating.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.06704Z","iopub.execute_input":"2024-04-27T08:04:34.06733Z","iopub.status.idle":"2024-04-27T08:04:34.081058Z","shell.execute_reply.started":"2024-04-27T08:04:34.067305Z","shell.execute_reply":"2024-04-27T08:04:34.079511Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Graduated or Not","metadata":{}},{"cell_type":"code","source":"education = df['education'].value_counts().reset_index()\n\neducation.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.08275Z","iopub.execute_input":"2024-04-27T08:04:34.083184Z","iopub.status.idle":"2024-04-27T08:04:34.097277Z","shell.execute_reply.started":"2024-04-27T08:04:34.083147Z","shell.execute_reply":"2024-04-27T08:04:34.095833Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Loan Range","metadata":{}},{"cell_type":"code","source":"loan_range = df['Loan Range'].value_counts().reset_index()\n\nloan_range","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.09875Z","iopub.execute_input":"2024-04-27T08:04:34.099106Z","iopub.status.idle":"2024-04-27T08:04:34.111652Z","shell.execute_reply.started":"2024-04-27T08:04:34.099074Z","shell.execute_reply":"2024-04-27T08:04:34.110462Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Number of Employed or Not","metadata":{}},{"cell_type":"code","source":"employment = df['self_employed'].value_counts().reset_index()\n\neployment = employment.rename(columns={'count':'Number of Applicants'})\nemployment","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.113095Z","iopub.execute_input":"2024-04-27T08:04:34.113457Z","iopub.status.idle":"2024-04-27T08:04:34.127937Z","shell.execute_reply.started":"2024-04-27T08:04:34.113423Z","shell.execute_reply":"2024-04-27T08:04:34.126531Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Rate of Loan Approvals","metadata":{}},{"cell_type":"markdown","source":"## Overall Rate","metadata":{}},{"cell_type":"code","source":"loan = df['loan_status'].value_counts().reset_index()\n\nloans = loan.rename(columns={'count':'Number of Applicants'})\n\nloans\n\nplt.pie(loans['Number of Applicants'],labels=loans['loan_status'],autopct='%1.1f%%')\nplt.suptitle('A pie chart showing accepted/rejected status')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.129532Z","iopub.execute_input":"2024-04-27T08:04:34.129879Z","iopub.status.idle":"2024-04-27T08:04:34.253462Z","shell.execute_reply.started":"2024-04-27T08:04:34.129831Z","shell.execute_reply":"2024-04-27T08:04:34.252135Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#loan approvals according to education\n\neducation = df.groupby(['education','loan_status']).size().reset_index()\n\n#filter to include rejected and approved\neducation = education[education['loan_status'].isin(['Approved','Rejected'])]\n\neducation","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.255549Z","iopub.execute_input":"2024-04-27T08:04:34.256025Z","iopub.status.idle":"2024-04-27T08:04:34.279313Z","shell.execute_reply.started":"2024-04-27T08:04:34.255984Z","shell.execute_reply":"2024-04-27T08:04:34.278185Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#create a pivot table\n\npivot_table = education.pivot(index='education',columns='loan_status',values=0)\nrow_totals = pivot_table.sum(axis=1)\npercentage = pivot_table.div(row_totals,axis=0) * 100\n\n#create a heat map\nplt.figure(figsize = (6,4))\n\nsns.heatmap(percentage, annot=True,fmt='.1f',cmap='coolwarm',linewidth=0.5)\n\n#labeling the heatmap\nplt.title('Loan Approvals by Education')\nplt.xlabel('Loan Status')\nplt.ylabel('Education Status')\n\nplt.show()\n\n\n","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.281138Z","iopub.execute_input":"2024-04-27T08:04:34.281867Z","iopub.status.idle":"2024-04-27T08:04:34.55819Z","shell.execute_reply.started":"2024-04-27T08:04:34.281826Z","shell.execute_reply":"2024-04-27T08:04:34.557448Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#loan apprrovals according to employment\n\nemployment_type = df.groupby(['self_employed','loan_status']).size().reset_index()\n\nemployment_type = employment_type[employment_type['loan_status'].isin(['Approved','Rejected'])]\n\nemployment_type = employment_type.rename(columns = {0:'Total'})\n\nemployment_type","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.559512Z","iopub.execute_input":"2024-04-27T08:04:34.559823Z","iopub.status.idle":"2024-04-27T08:04:34.577528Z","shell.execute_reply.started":"2024-04-27T08:04:34.559796Z","shell.execute_reply":"2024-04-27T08:04:34.576466Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"pivot_table = employment_type.pivot(index='self_employed',columns='loan_status',values='Total')\nrow_totals = pivot_table.sum(axis=1)\npercentage = pivot_table.div(row_totals,axis=0) * 100\n\n#create a heat map\nplt.figure(figsize = (6,4))\n\nsns.heatmap(percentage, annot=True,fmt='.1f',cmap='coolwarm',linewidth=0.5)\n\n#labeling the heatmap\nplt.title('Loan Approvals by Employment Status')\nplt.xlabel('Loan Status')\nplt.ylabel('Employment Status')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.579003Z","iopub.execute_input":"2024-04-27T08:04:34.579418Z","iopub.status.idle":"2024-04-27T08:04:34.842751Z","shell.execute_reply.started":"2024-04-27T08:04:34.57936Z","shell.execute_reply":"2024-04-27T08:04:34.841502Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Loan Approval by CIBIL Rating","metadata":{}},{"cell_type":"code","source":"#group data according to CIBIL Rating\n\ncibil_rates = df.groupby(['CB_Rating','loan_status']).size().reset_index()\n\ncibil_rates = cibil_rates.rename(columns={0:'Totals'})\n\n\ncibil_rates","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.847726Z","iopub.execute_input":"2024-04-27T08:04:34.848106Z","iopub.status.idle":"2024-04-27T08:04:34.86481Z","shell.execute_reply.started":"2024-04-27T08:04:34.848072Z","shell.execute_reply":"2024-04-27T08:04:34.863451Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#pivot table\npivot_table = cibil_rates.pivot_table(index='CB_Rating',columns='loan_status',values = 'Totals')\n\n#calculating the approval rates\npivot_table['Approval Rate'] = pivot_table['Approved']/(pivot_table['Approved'] + pivot_table['Rejected']) * 100\n\n\n#create a heatmap\nplt.figure(figsize=(8,5))\nsns.heatmap(pivot_table[['Approval Rate']],annot=True, fmt='.1f',cmap='coolwarm',linewidth=0.5)\n\nplt.title('Loan Approval Rates by CB Rating')\nplt.xlabel('Loan Status')\nplt.ylabel('CIBIL Rating')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:34.866378Z","iopub.execute_input":"2024-04-27T08:04:34.866821Z","iopub.status.idle":"2024-04-27T08:04:35.182521Z","shell.execute_reply.started":"2024-04-27T08:04:34.866783Z","shell.execute_reply":"2024-04-27T08:04:35.180958Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Correlation Analysis","metadata":{}},{"cell_type":"code","source":"corr = df.corr(numeric_only=True)\n\n#create a heatmap\nplt.figure(figsize=(7,4))\nsns.heatmap(corr, annot=True,cmap='coolwarm',center=0,fmt='.2f')\nplt.title('Correlation Heatmap')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:35.184228Z","iopub.execute_input":"2024-04-27T08:04:35.18468Z","iopub.status.idle":"2024-04-27T08:04:35.917126Z","shell.execute_reply.started":"2024-04-27T08:04:35.184648Z","shell.execute_reply":"2024-04-27T08:04:35.915961Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#correlation between asset value and income\nassets = ['residential_assets_value','commercial_assets_value','luxury_assets_value','bank_asset_value']\nincome = 'income_annum'\n\n#calculate the correlation (Pearson Correlation)\ncorrelations = df[assets + [income]].corr()\n\ncorrelations","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:42:29.152684Z","iopub.execute_input":"2024-04-27T09:42:29.153282Z","iopub.status.idle":"2024-04-27T09:42:29.174735Z","shell.execute_reply.started":"2024-04-27T09:42:29.153237Z","shell.execute_reply":"2024-04-27T09:42:29.17297Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#correlation between asset value and income\n\nassets = ['residential_assets_value','commercial_assets_value','luxury_assets_value','bank_asset_value']\nloan = 'loan_amount'\n\n#calculate the correlation (Pearson Correlation)\ncorrelations = df[assets + [loan]].corr()\n\ncorrelations","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:04:35.939669Z","iopub.execute_input":"2024-04-27T08:04:35.940003Z","iopub.status.idle":"2024-04-27T08:04:35.957609Z","shell.execute_reply.started":"2024-04-27T08:04:35.939976Z","shell.execute_reply":"2024-04-27T08:04:35.956454Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Asset Value Impact/Influence on Loan Approval","metadata":{}},{"cell_type":"code","source":"#importing machine learning models\nfrom scipy import stats\nfrom scipy.stats import f_oneway #ANOVA Analysis\nfrom scipy.stats import ttest_ind #Conducting a t-test\nfrom scipy.stats import chi2_contingency #Chi-Square Analysis","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:42:54.628539Z","iopub.execute_input":"2024-04-27T09:42:54.628989Z","iopub.status.idle":"2024-04-27T09:42:54.634511Z","shell.execute_reply.started":"2024-04-27T09:42:54.628954Z","shell.execute_reply":"2024-04-27T09:42:54.633427Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#split data into two groups based on loan status\napproved = df[df ['loan_status'] == 'Approved']\nrejected = df[df['loan_status'] == 'Rejected']\n\n#Perform a t-test\nassets = ['residential_assets_value','commercial_assets_value','luxury_assets_value','bank_asset_value']\n\nfor columns in assets:\n    t_stat,p_value = ttest_ind(approved[columns],rejected[columns],equal_var=False)\n    print(f\"T-Test for {columns}:\")\n    print(f\"T-Statistic: {t_stat}\")\n    print(f\"P-Value: {p_value}\")\n    if p_value < 0.05:\n        print(f\"The difference in {columns} between approved & rejected loans statistically significant\")\n    else:\n        print(f\"The difference in {columns} between approved & rejected loans is not statistically significant\")\n","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:07:21.716415Z","iopub.execute_input":"2024-04-27T08:07:21.716801Z","iopub.status.idle":"2024-04-27T08:07:21.741801Z","shell.execute_reply.started":"2024-04-27T08:07:21.716773Z","shell.execute_reply":"2024-04-27T08:07:21.740147Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# ANOVA Analysis Correlation Between Income and Asset Value","metadata":{}},{"cell_type":"code","source":"#null hypothesis: There is no relation (significant difference) between assests value and income\n#alternative hypothesis : There exists a relation (significant difference) between asset value and income\n\n\n#extracting values in columns\nresidential_assets = df['residential_assets_value']\ncommercial_assets = df['commercial_assets_value']\nluxury_assests = df['luxury_assets_value']\nbank_assets = df['bank_asset_value']\nincome = df['income_annum']\n\n# perform ANOVA\n\nf_statistic,p_value = f_oneway(residential_assets,commercial_assets,luxury_assests,bank_assests,income)\n\nprint('The f statistics:',f_statistic)\nprint('The p statistics:',p_value)\n\n\nif p_value < 0.05:\n    print('There exists a relation (significant difference) between asset value and income')\nelse:\n    print('There is no relation (significant difference) between assests value and income')\n","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:09:05.107161Z","iopub.execute_input":"2024-04-27T08:09:05.107659Z","iopub.status.idle":"2024-04-27T08:09:05.116968Z","shell.execute_reply.started":"2024-04-27T08:09:05.107621Z","shell.execute_reply":"2024-04-27T08:09:05.115949Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Correlation Between Income and Loan Amount","metadata":{}},{"cell_type":"code","source":"#null hypothesis: There is no relation (significant difference) between loan amount and income\n#alternative hypothesis : There exists a relation (significant difference) between loan amount and income\n\nincome = df['income_annum']\nloan = df['loan_amount']\n\n\n#perform an independ t-test\nt_stat,p_value = ttest_ind(income,loan,equal_var=True)\n\nprint('The T-statistics:',t_stat)\nprint('The P_value is :',p_value)\n\nif p_value < 0.05:\n    print('Accept the Hypothesis')\nelse:\n    print('Reject the Null Hypothesis')\n","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:44:11.54477Z","iopub.execute_input":"2024-04-27T09:44:11.545231Z","iopub.status.idle":"2024-04-27T09:44:11.555518Z","shell.execute_reply.started":"2024-04-27T09:44:11.545189Z","shell.execute_reply":"2024-04-27T09:44:11.554211Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"### Box plot","metadata":{}},{"cell_type":"code","source":"income = df['income_annum']\nloan = df['loan_amount']\n\n#plot\nplt.figure(figsize=(6,4))\nax = plt.axes()\n\nax.boxplot([income,loan],labels=['Income per Annum','Loan Amount'])\n\nplt.suptitle('A Box Plot Showing Correlation of Income and Loan Amount')\nplt.ylabel('Amount')\nplt.xlabel('Income vs Loan')\n\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:24:51.442544Z","iopub.execute_input":"2024-04-27T08:24:51.443837Z","iopub.status.idle":"2024-04-27T08:24:51.637528Z","shell.execute_reply.started":"2024-04-27T08:24:51.443794Z","shell.execute_reply":"2024-04-27T08:24:51.636306Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Chi-Square Analysis : Correlation Between the Loan Status and Number of dependants","metadata":{}},{"cell_type":"code","source":"contingency_table = pd.crosstab(df['loan_status'],df['Number of Dependents'])\n\n#perform chi-square\nchi2,p_value,dof,expected = stats.chi2_contingency(contingency_table)\n\nprint('Chi-Square t-test:',chi2)\nprint('The P_Value is:',p_value)\nprint('The dof is:',dof)\n\nif p_value < 0.05:\n    print('There significanc relationship between loan status and the number of dependents')\nelse:\n    print('There is not significance relationship between loan status and the number of dependents')","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:38:37.267205Z","iopub.execute_input":"2024-04-27T08:38:37.267627Z","iopub.status.idle":"2024-04-27T08:38:37.287352Z","shell.execute_reply.started":"2024-04-27T08:38:37.267595Z","shell.execute_reply":"2024-04-27T08:38:37.286119Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"# Logistic Regression","metadata":{}},{"cell_type":"code","source":"#changing categorical column to numeric\n\ndef edu_status(status):\n    if status == 'Graduate':\n        return 1\n    elif status == 'Not Graduate':\n        return 0\n    else:\n        return 'error'\n    \ndf['Education Status'] = df['education'].apply(edu_status)\n\ndef employ_type(employ):\n    if employ == 'Yes':\n        return 1\n    if employ == 'No':\n        return 0\n    \ndf['Employment Type'] = df['self_employed'].apply(employ_type)\n\n\ndef loan_approval(status):\n    if status == 'Approved':\n        return 1\n    if status == 'Rejected':\n        return 0\n    \ndf['Loan Approval'] = df['loan_status'].apply(loan_approval)\n\ndf.head(10)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T08:50:27.430586Z","iopub.execute_input":"2024-04-27T08:50:27.431032Z","iopub.status.idle":"2024-04-27T08:50:27.47005Z","shell.execute_reply.started":"2024-04-27T08:50:27.430995Z","shell.execute_reply":"2024-04-27T08:50:27.468794Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#separate the values and define X \n\nX = df.drop(columns={'loan_id','CB_Rating','Income levels','Loan Rating','loan_status','Loan Range','Number of Dependents','Education Status','Employment Type','Loan Approval','education','self_employed'})\n\nX","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:19:28.006643Z","iopub.execute_input":"2024-04-27T09:19:28.007074Z","iopub.status.idle":"2024-04-27T09:19:28.025675Z","shell.execute_reply.started":"2024-04-27T09:19:28.00704Z","shell.execute_reply":"2024-04-27T09:19:28.024618Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#defining y-axis\n\ny = df['Loan Approval']\n\ny.head()","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:19:31.501054Z","iopub.execute_input":"2024-04-27T09:19:31.501865Z","iopub.status.idle":"2024-04-27T09:19:31.510816Z","shell.execute_reply.started":"2024-04-27T09:19:31.501823Z","shell.execute_reply":"2024-04-27T09:19:31.509586Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#importing the regression mode libraries\n\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.model_selection import train_test_split\n\n#splitting the data set, test and validation\nX_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.3,random_state=18)\n\n\n#scaling data\nscaler = StandardScaler()\n\nX_train_scaled = scaler.fit_transform(X_train)\nX_test_scaled = scaler.fit_transform(X_test)\n\nX_train_scaled\n\n","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:25:43.541854Z","iopub.execute_input":"2024-04-27T09:25:43.542342Z","iopub.status.idle":"2024-04-27T09:25:43.565566Z","shell.execute_reply.started":"2024-04-27T09:25:43.542304Z","shell.execute_reply":"2024-04-27T09:25:43.564539Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"X_test_scaled","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:25:47.797796Z","iopub.execute_input":"2024-04-27T09:25:47.798212Z","iopub.status.idle":"2024-04-27T09:25:47.80578Z","shell.execute_reply.started":"2024-04-27T09:25:47.798183Z","shell.execute_reply":"2024-04-27T09:25:47.804623Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#Training and predict the model\n\nmodel = LogisticRegression(random_state=0).fit(X_train_scaled,y_train)\npredict = model.predict(X_train_scaled)\n\nprint(predict)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:25:51.598678Z","iopub.execute_input":"2024-04-27T09:25:51.599557Z","iopub.status.idle":"2024-04-27T09:25:51.636518Z","shell.execute_reply.started":"2024-04-27T09:25:51.599518Z","shell.execute_reply":"2024-04-27T09:25:51.634983Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"#accuracy\nmodel.score(X_train_scaled,y_train)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:25:54.300667Z","iopub.execute_input":"2024-04-27T09:25:54.301114Z","iopub.status.idle":"2024-04-27T09:25:54.315995Z","shell.execute_reply.started":"2024-04-27T09:25:54.301079Z","shell.execute_reply":"2024-04-27T09:25:54.314648Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"# Accurancy of the new dataset\nmodel.score(X_test_scaled,y_test)","metadata":{"execution":{"iopub.status.busy":"2024-04-27T09:28:08.045534Z","iopub.execute_input":"2024-04-27T09:28:08.045921Z","iopub.status.idle":"2024-04-27T09:28:08.059376Z","shell.execute_reply.started":"2024-04-27T09:28:08.045893Z","shell.execute_reply":"2024-04-27T09:28:08.058145Z"},"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":"## Our model attained a accurancy of 92!","metadata":{}},{"cell_type":"code","source":"","metadata":{"trusted":true},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}